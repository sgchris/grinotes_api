-- MySQL dump 10.13  Distrib 5.7.23, for Linux (x86_64)
--
-- Host: localhost    Database: grinotes
-- ------------------------------------------------------
-- Server version	5.7.23-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `file_versions`
--

DROP TABLE IF EXISTS `file_versions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `file_versions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `file_id` int(11) DEFAULT NULL,
  `date_created` int(11) DEFAULT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`id`),
  KEY `file_id` (`file_id`)
) ENGINE=InnoDB AUTO_INCREMENT=343 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `file_versions`
--

LOCK TABLES `file_versions` WRITE;
/*!40000 ALTER TABLE `file_versions` DISABLE KEYS */;
INSERT INTO `file_versions` VALUES (182,46,1520668905,'abc'),(184,46,1520935986,'abc'),(202,46,1521208819,'abc'),(214,46,1521316748,'abc'),(216,46,1521316769,'abc'),(217,46,1521316782,'abc'),(223,46,1521920324,'abc'),(224,46,1521920328,'abc'),(225,46,1521920333,'abc'),(226,46,1521920736,'abc'),(227,46,1521920746,'abc'),(228,46,1521920749,'abc'),(229,46,1521920792,'abc'),(230,46,1521920803,'abc'),(233,46,1522397896,'abc'),(234,46,1522397905,'abc'),(235,46,1522397919,'abc'),(236,46,1522523252,'abc'),(240,46,1522570971,'abc'),(241,46,1522570977,'abc'),(242,46,1522743353,'abc'),(243,46,1522743363,'abc'),(244,46,1522744018,'abc'),(245,46,1522744024,'abc'),(246,46,1522744438,'abc'),(247,46,1522744538,'abc'),(248,46,1522744678,'abc'),(249,46,1522744684,'abc'),(250,46,1522745159,'abc'),(258,46,1522746172,'abc'),(260,46,1522746192,'abc'),(261,46,1522746198,'abc'),(263,46,1522746547,'abc'),(270,46,1522746844,'abc'),(271,46,1522780191,'abc'),(272,46,1522780198,'abc'),(273,46,1522879930,'abc'),(274,46,1522879965,'abc'),(275,46,1524768368,'new content'),(276,46,1524768397,'new content'),(277,46,1524768407,'new content'),(278,46,1524768409,'new content'),(279,46,1524768411,'new content'),(280,46,1524768617,'abcddswww'),(281,46,1524770075,'abcddswwwd2wsx'),(285,72,1524821803,'&nbsp;<i>My</i> <u>note</u> <b>53583</b>'),(286,72,1524822802,'&nbsp;<i>My</i> <u>note</u> <b>53583</b><div><b><br></b></div><div>something more!</div>'),(287,73,1524901284,'https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594'),(288,73,1524901288,'<a href=\"https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594\">https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594</a>'),(289,73,1524902287,'<a href=\"https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594\">https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594</a><div><br></div>'),(290,73,1524902337,'<a href=\"https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594\">https://www.tiuli.com/tracks/110/%25D7%2599%25D7%25A2%25D7%25A8-%25D7%25A7%25D7%2595%25D7%259C%25D7%2594-%25D7%2595%25D7%2591%25D7%25A8%25D7%2599%25D7%259B%25D7%25AA-%25D7%25A6%25D7%25A8%25D7%2598%25D7%2594</a><div>asdasd</div>'),(291,75,1525804360,'<a href=\"https://www.youtube.com/watch?v=t_cYtPKOpNI\">https://www.youtube.com/watch?v=t_cYtPKOpNI</a>'),(292,75,1525804368,'<div>Google keynotes</div><a href=\"https://www.youtube.com/watch?v=t_cYtPKOpNI\">https://www.youtube.com/watch?v=t_cYtPKOpNI</a><div><br></div>'),(293,76,1526582664,'sdfsdfsdf'),(294,76,1526582674,'sdfsdfsdf%3Cdiv%3E%D7%93%D7%92%D7%9B%D7%93%D7%92%D7%9B%D7%93%D7%92%D7%9B%3C%2Fdiv%3E'),(295,76,1526583373,'sdfsdfsdf%3Cdiv%3E%3Ca%20href%3D%22%D7%93%D7%92%D7%9B%D7%93%D7%92%D7%9B%D7%93%D7%92%D7%9B%22%3E%D7%93%D7%92%D7%9B%D7%93%D7%92%D7%9B%D7%93%D7%92%D7%9B%3C%2Fa%3E%3C%2Fdiv%3E'),(296,77,1527788981,'%D7%9C%D7%A7%D7%A8%D7%90%D7%AA%26nbsp%3B'),(297,77,1528396961,'asd'),(298,78,1528700309,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-world</div><div><br></div><div>Download</div>'),(299,78,1528700444,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div><br></div>'),(300,78,1528700673,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div><br></div><div>Run image and enter its terminal (interactive)</div><div>&nbsp; &nbsp; $&nbsp;</div>'),(301,78,1528700742,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div>'),(302,78,1528700743,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div><br></div>'),(303,78,1528701509,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div><br></div>'),(304,78,1528701774,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache</div>'),(305,78,1528701829,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div><br></div>'),(306,78,1528701961,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div>'),(307,78,1528702164,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div><br></div>'),(308,78,1528702246,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div><br></div>'),(309,78,1528703328,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div>'),(310,78,1528703336,'Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\"><br></span></div><div><span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\"><br></span></div>'),(311,78,1528704537,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div>'),(312,78,1528704652,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt;</div><div><br></div><div><br></div>'),(313,78,1528704729,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div><br></div><div><br></div>'),(314,78,1528704893,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div><br></div><div><br></div>'),(315,78,1528705014,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; &nbsp;$ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div><br></div><div><br></div>'),(316,78,1528705015,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div><br></div><div><br></div>'),(317,78,1528705219,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><br></div>'),(318,78,1528705331,'<div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u>Docker HUB</u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div>'),(319,78,1528705618,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div>'),(320,78,1528705724,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div>'),(321,78,1528705908,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div><div>Create own network</div><div>&nbsp; &nbsp; $ docker create network &lt;net-name&gt;</div><div><br></div><div>Remove container from a network</div><div>&nbsp; &nbsp; $ docker network disconnect bridge &lt;container-name&gt;</div><div>Add container to the created network</div><div>&nbsp; &nbsp; $ docker network connect &lt;net-name&gt; &lt;container-name&gt;</div><div><br></div><div>A container might be connected to several networks</div><div><br></div><div><br></div><div><br></div>'),(322,78,1528706438,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span style=\"font-size: 1rem;\">orld</span></div><div><span style=\"font-size: 1rem;\"><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span style=\"background-color: rgb(254, 254, 254); color: rgb(58, 58, 58); font-family: Roboto, Arial, sans-serif; font-size: 18px;\">Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div><div>Create own network</div><div>&nbsp; &nbsp; $ docker create network &lt;net-name&gt;</div><div><br></div><div>Remove container from a network</div><div>&nbsp; &nbsp; $ docker network disconnect bridge &lt;container-name&gt;</div><div>Add container to the created network</div><div>&nbsp; &nbsp; $ docker network connect &lt;net-name&gt; &lt;container-name&gt;</div><div><br></div><div>A container might be connected to several networks</div><div><br></div>'),(323,78,1528786524,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span>orld</span></div><div><span><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span>Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div><div>Create own network</div><div>&nbsp; &nbsp; $ docker create network &lt;net-name&gt;</div><div><br></div><div>Remove container from a network</div><div>&nbsp; &nbsp; $ docker network disconnect bridge &lt;container-name&gt;</div><div>Add container to the created network</div><div>&nbsp; &nbsp; $ docker network connect &lt;net-name&gt; &lt;container-name&gt;</div><div><br></div><div>A container might be connected to several networks</div><div><br></div><div><br></div>'),(324,78,1528789090,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span>orld</span></div><div><span><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span>Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div><div>Create own network</div><div>&nbsp; &nbsp; $ docker create network &lt;net-name&gt;</div><div><br></div><div>Remove container from a network</div><div>&nbsp; &nbsp; $ docker network disconnect bridge &lt;container-name&gt;</div><div>Add container to the created network</div><div>&nbsp; &nbsp; $ docker network connect &lt;net-name&gt; &lt;container-name&gt;</div><div><br></div><div>A container might be connected to several networks</div><div><br></div><div>Link two</div>'),(325,78,1528789305,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span>orld</span></div><div><span><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span>Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div><div>Create own network</div><div>&nbsp; &nbsp; $ docker create network &lt;net-name&gt;</div><div><br></div><div>Remove container from a network</div><div>&nbsp; &nbsp; $ docker network disconnect bridge &lt;container-name&gt;</div><div>Add container to the created network</div><div>&nbsp; &nbsp; $ docker network connect &lt;net-name&gt; &lt;container-name&gt;</div><div><br></div><div>A container might be connected to several networks</div><div><br></div><div>Link two containers, e.g. wordpress container with mysql container</div><div>&nbsp; &nbsp; $ docker run --name wp-mysql -e MYSQL_ROOT_PASSWORD=test123 -d mysql</div><div>&nbsp; &nbsp; $ docker run --name my-wordpress --link wp-mysql:mysql -p 8080:80 -d wordpress</div><div>&nbsp; &nbsp; (--link two containers without needing the IP address)</div>'),(326,78,1528789345,'<div><b><u><br></u></b></div><div><b><u>Docker basic commands</u></b></div><div><br></div><div>Run a docker:<div>&nbsp; &nbsp; $ docker run hello-w<span>orld</span></div><div><span><br></span></div><div>Docker images:&nbsp;</div><div>&nbsp; &nbsp;&nbsp;<a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></div><div><br></div><div>Download the docker image (ubuntu for example)</div><div>&nbsp; &nbsp; $ docker pull ubuntu</div><div><br></div><div>Run specific version</div><div>&nbsp; &nbsp; $ docker run ubuntu:12.04</div><div><br></div><div>List available (downloaded images)</div><div>&nbsp; &nbsp; $ docker images</div><div>List running</div><div>&nbsp; &nbsp; $ docker ps</div><div>List all&nbsp;</div><div>&nbsp; &nbsp; $ docker ps -a</div><div><br></div><div>Run image and enter its terminal (interactive + terminal)</div><div>&nbsp; &nbsp; $ docker run -i -t ubuntu</div><div><br></div><div>Run Apache container with mapped folder and mapped ports (redirects), and with a custom image name</div><div>&nbsp; &nbsp; $ docker run --name my-apache -p 8520:80 -v /var/www/html/my-web-site -d eboraas/apache:oldstable</div><div>(-d means \"detached mode\", i.e. the container exists once the root scripts finish to run)</div><div><br></div><div>Stop a container</div><div>&nbsp; &nbsp; $ docker stop my-apache</div><div><br></div><div>Start existing container</div><div>&nbsp; &nbsp; $ docker start my-apache</div><div><br></div><div>Restart an image</div><div>&nbsp; &nbsp; $ docker restart my-apache</div><div><br></div><div>GUI tool for container management - \"<span>Kitematic\"&nbsp;</span></div><div><br></div><div>Remove a container (remove the container but not the image)</div><div>&nbsp; &nbsp; $ docker rm &lt;container-ID&gt;/&lt;container-name&gt;</div><div><br></div><div>Remove an image</div><div>&nbsp; &nbsp; $ docker rmi ubuntu:latest</div><div><br></div></div><div>Make an image out of a container</div><div>&nbsp; &nbsp; $ docker commit &lt;container-ID/name&gt; &lt;image-name&gt;</div><div>&nbsp; &nbsp; rename: (actually create new one)</div><div>&nbsp; &nbsp; $ docker tag &lt;old-image-name&gt; &lt;new-image-name&gt;</div><div><br></div><div><u><b>Docker HUB</b></u></div><div><u><br></u></div><div>&nbsp; &nbsp; $ docker login</div><div>&nbsp; &nbsp; $ docker push &lt;image-name&gt;</div><div><br></div><div><b><u>Networking</u></b></div><div><br></div><div>List networks</div><div>&nbsp; &nbsp; $ docker network ls</div><div>&nbsp; &nbsp; (ls - list (L and S))</div><div>&nbsp; &nbsp;</div><div>Get IP addresses of the containers\' networks</div><div>&nbsp; &nbsp; $ docker network inspect bridge</div><div><br></div><div>Create own network</div><div>&nbsp; &nbsp; $ docker create network &lt;net-name&gt;</div><div><br></div><div>Remove container from a network</div><div>&nbsp; &nbsp; $ docker network disconnect bridge &lt;container-name&gt;</div><div>Add container to the created network</div><div>&nbsp; &nbsp; $ docker network connect &lt;net-name&gt; &lt;container-name&gt;</div><div><br></div><div>A container might be connected to several networks</div><div><br></div><div>Link two containers, e.g. wordpress container with mysql container</div><div>&nbsp; &nbsp; $ docker run --name wp-mysql -e MYSQL_ROOT_PASSWORD=test123 -d mysql</div><div>&nbsp; &nbsp; $ docker run --name my-wordpress --link wp-mysql:mysql -p 8080:80 -d wordpress</div><div>--link two containers without needing the IP address. --link &lt;container-name&gt;:&lt;alias-name&gt;</div><div><br></div><div><br></div>'),(327,79,1530298533,'1.%20npm%20init%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E2.%20npm%20install%20webpack%20--save-dev%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(328,79,1530298610,'%3Cdiv%3E(optional)%3C%2Fdiv%3E%3Cdiv%3E%23%20sudo%20npm%20install%20-g%20npm%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%23%20npm%20init%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%23%20npm%20install%20webpack%20--save-dev%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(329,79,1530299196,'%3Cdiv%3E(optional)%3C%2Fdiv%3E%3Cdiv%3E%23%20sudo%20npm%20install%20-g%20npm%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%20style%3D%22font-size%3A%201rem%3B%22%3E%23%20npm%20init%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%20style%3D%22font-size%3A%201rem%3B%22%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%23%26nbsp%3Bnpm%20install%20webpack%20webpack-cli%20--save-dev%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(330,79,1531124735,'&lt;div&gt;(optional)&lt;/div&gt;&lt;div&gt;# sudo npm install -g npm&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=\"font-size: 1rem;\"&gt;# npm init&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=\"font-size: 1rem;\"&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;# npm install webpack webpack-cli --save-dev&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;'),(331,79,1531124770,'<div style=\"color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium;\">(optional)</div><div style=\"color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium;\"># sudo npm install -g npm</div><div style=\"color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium;\"><br></div><div style=\"color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium;\"><span style=\"font-size: 1rem;\"># npm init</span><br></div><div style=\"color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium;\"><span style=\"font-size: 1rem;\"><br></span></div><div style=\"color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium;\">#&nbsp;npm install webpack webpack-cli --save-dev<br></div><div><br></div>'),(332,78,1532460592,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%20style%3D%22font-size%3A%201rem%3B%22%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%20style%3D%22font-size%3A%201rem%3B%22%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(333,78,1532969614,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(334,78,1532969650,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(335,78,1532969805,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(336,78,1532969807,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(337,78,1532970795,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(338,78,1532970887,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20tag%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(339,78,1532970893,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20tag%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag%20name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(340,78,1532971237,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20tag%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag%20name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EVolumes%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E-%20persistent%20(remain%20after%20death)%3C%2Fdiv%3E%3Cdiv%3E-%20ephemeral%20(die%20after%20death%20too)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(341,78,1532971545,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20tag%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag%20name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EVolumes%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E-%20persistent%20(remain%20after%20death)%3C%2Fdiv%3E%3Cdiv%3E-%20ephemeral%20(die%20after%20death%20too)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20docker%20with%20shared%20folder%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%24%20docker%20run%20...%20-v%20%26lt%3Bhost-folder%26gt%3B%3A%26lt%3Bdocker-internal-folder%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E'),(342,78,1532971723,'%3Cdiv%3E%3Cb%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3EDocker%20basic%20commands%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20a%20docker%3A%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20hello-w%3Cspan%3Eorld%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3EDocker%20images%3A%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%26nbsp%3B%3Ca%20href%3D%22https%3A%2F%2Fhub.docker.com%2F%22%3Ehttps%3A%2F%2Fhub.docker.com%2F%3C%2Fa%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EDownload%20the%20docker%20image%20(ubuntu%20for%20example)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20pull%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20specific%20version%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20ubuntu%3A12.04%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20available%20(downloaded%20images)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20images%3C%2Fdiv%3E%3Cdiv%3EList%20running%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%3C%2Fdiv%3E%3Cdiv%3EList%20all%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20ps%20-a%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20image%20and%20enter%20its%20terminal%20(interactive%20%2B%20terminal)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20-i%20-t%20ubuntu%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20Apache%20container%20with%20mapped%20folder%20and%20mapped%20ports%20(redirects)%2C%20and%20with%20a%20custom%20image%20name%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-apache%20-p%208520%3A80%20-v%20%2Fvar%2Fwww%2Fhtml%2Fmy-web-site%20-d%20eboraas%2Fapache%3Aoldstable%3C%2Fdiv%3E%3Cdiv%3E(-d%20means%20%22detached%20mode%22%2C%20i.e.%20the%20container%20exists%20once%20the%20root%20scripts%20finish%20to%20run)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStop%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20stop%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20existing%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20start%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERestart%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20restart%20my-apache%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EGUI%20tool%20for%20container%20management%20-%20%22%3Cspan%3EKitematic%22%26nbsp%3B%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20container%20(remove%20the%20container%20but%20not%20the%20image)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rm%20%26lt%3Bcontainer-ID%26gt%3B%2F%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20an%20image%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20ubuntu%3Alatest%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3C%2Fdiv%3E%3Cdiv%3EMake%20an%20image%20out%20of%20a%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20commit%20%26lt%3Bcontainer-ID%2Fname%26gt%3B%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20rename%3A%20(actually%20create%20new%20one)%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20tag%20%26lt%3Bold-image-name%26gt%3B%20%26lt%3Bnew-image-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3ERemove%20a%20tag%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20rmi%20%26lt%3Bimage-name%26gt%3B%3A%26lt%3Btag%20name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cb%3EDocker%20HUB%3C%2Fb%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cu%3E%3Cbr%3E%3C%2Fu%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20login%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20push%20%26lt%3Bimage-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ENetworking%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20ls%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20(ls%20-%20list%20(L%20and%20S))%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%3C%2Fdiv%3E%3Cdiv%3EGet%20IP%20addresses%20of%20the%20containers\'%20networks%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20inspect%20bridge%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ECreate%20own%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20create%20network%20%26lt%3Bnet-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERemove%20container%20from%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20disconnect%20bridge%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EAdd%20container%20to%20the%20created%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20network%20connect%20%26lt%3Bnet-name%26gt%3B%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EA%20container%20might%20be%20connected%20to%20several%20networks%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ERun%20docker%20container%20in%20a%20network%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--net%3D%26lt%3Bnetwork%20name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3ELink%20two%20containers%2C%20e.g.%20wordpress%20container%20with%20mysql%20container%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20wp-mysql%20-e%20MYSQL_ROOT_PASSWORD%3Dtest123%20-d%20mysql%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20--name%20my-wordpress%20--link%20wp-mysql%3Amysql%20-p%208080%3A80%20-d%20wordpress%3C%2Fdiv%3E%3Cdiv%3E--link%20two%20containers%20without%20needing%20the%20IP%20address.%20--link%20%26lt%3Bcontainer-name%26gt%3B%3A%26lt%3Balias-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EList%20exposed%20ports%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20port%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3EThat%20should%20list%20exposed%20ports%20and%20their%20bindings%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cb%3E%3Cu%3ELogs%3C%2Fu%3E%3C%2Fb%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3E%3Cbr%3E%3C%2Fspan%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cspan%3ECheck%20the%20output%20of%20a%20container%3C%2Fspan%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20logs%20%26lt%3Bcontainer-name%26gt%3B%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EVolumes%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3E-%20persistent%20(remain%20after%20death)%3C%2Fdiv%3E%3Cdiv%3E-%20ephemeral%20(die%20after%20death%20too)%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EStart%20docker%20with%20shared%20folder%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%24%20docker%20run%20...%20-v%20%26lt%3Bhost-folder%26gt%3B%3A%26lt%3Bdocker-internal-folder%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E%3Cdiv%3EShare%20volume%20between%20dockers%3C%2Fdiv%3E%3Cdiv%3E%26nbsp%3B%20%26nbsp%3B%20%24%20docker%20run%20...%20--volumes-from%20%26lt%3Bcontainer-name%26gt%3B%20...%3C%2Fdiv%3E%3Cdiv%3EInside%20the%20new%20container%20the%20volumes%20from%20that%20docker%20will%20be%20available%3C%2Fdiv%3E%3Cdiv%3E%3Cbr%3E%3C%2Fdiv%3E');
/*!40000 ALTER TABLE `file_versions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `files`
--

DROP TABLE IF EXISTS `files`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `files` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `date_created` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `is_public` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=80 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `files`
--

LOCK TABLES `files` WRITE;
/*!40000 ALTER TABLE `files` DISABLE KEYS */;
INSERT INTO `files` VALUES (70,'techcrunch',1520196406,1,0),(72,'My note 53583',1523951404,1,0),(73,'Trips',1524901280,1,0),(75,'Videos',1525804252,1,0),(76,'Books',1526421526,1,0),(77,'johny letter',1527788966,1,0),(78,'Docker',1528700284,1,0),(79,'webpack',1530298519,1,0);
/*!40000 ALTER TABLE `files` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `metadata`
--

DROP TABLE IF EXISTS `metadata`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `metadata` (
  `key` varchar(255) NOT NULL,
  `value` text,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`key`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `metadata`
--

LOCK TABLES `metadata` WRITE;
/*!40000 ALTER TABLE `metadata` DISABLE KEYS */;
INSERT INTO `metadata` VALUES ('grinotes_selected_file_id','78',1),('twodo_selected_file_id','57',1);
/*!40000 ALTER TABLE `metadata` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `image` varchar(1024) DEFAULT NULL,
  `fbid` varchar(100) DEFAULT NULL,
  `date_created` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'Gregory Chris','sgchris@gmail.com',NULL,'10156024017193864',1518467687);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-08-21 16:49:42
